[{"C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\index.js":"1","C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\App.js":"2","C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\components\\Routing\\Routing.js":"4","C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\components\\NavBar\\NavBar.js":"5","C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\components\\NavBar\\Navbar.js":"6","C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\components\\NavBar\\MenuItems.js":"7","C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\components\\Button.js":"8","C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\components\\Dashboard\\Dashboard.js":"9","C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\components\\DemandOverdue\\DemandOverdueTable.js":"10","C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\components\\DemandOverdue\\columns.js":"11","C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\components\\DemandOverdue\\GlobalFilter.js":"12","C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\components\\DemandOverdue\\Checkbox.js":"13","C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\components\\Locations\\Locations.js":"14","C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\components\\PieChart\\Piechart.js":"15","C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\components\\Cadre\\Cadre.js":"16","C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\services\\requests.js":"17","C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\components\\Loader\\Loader.js":"18","C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\components\\Home\\Home.js":"19"},{"size":231,"mtime":1607960754176,"results":"20","hashOfConfig":"21"},{"size":204,"mtime":1608036608829,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":708,"mtime":1609856380678,"results":"24","hashOfConfig":"21"},{"size":999,"mtime":1607609187197,"results":"25","hashOfConfig":"21"},{"size":2026,"mtime":1609170952819,"results":"26","hashOfConfig":"21"},{"size":570,"mtime":1608643712353,"results":"27","hashOfConfig":"21"},{"size":626,"mtime":1607618981082,"results":"28","hashOfConfig":"21"},{"size":4210,"mtime":1609857665695,"results":"29","hashOfConfig":"21"},{"size":6108,"mtime":1609275592577,"results":"30","hashOfConfig":"21"},{"size":1729,"mtime":1609273913935,"results":"31","hashOfConfig":"21"},{"size":332,"mtime":1607949949290,"results":"32","hashOfConfig":"21"},{"size":460,"mtime":1607949949274,"results":"33","hashOfConfig":"21"},{"size":3736,"mtime":1608665012299,"results":"34","hashOfConfig":"21"},{"size":1208,"mtime":1609170980651,"results":"35","hashOfConfig":"21"},{"size":3651,"mtime":1608644576982,"results":"36","hashOfConfig":"21"},{"size":150,"mtime":1609196290877,"results":"37","hashOfConfig":"21"},{"size":214,"mtime":1609258503136,"results":"38","hashOfConfig":"21"},{"size":517,"mtime":1609856788054,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1rexkat",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\index.js",[],["83","84"],"C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\App.js",[],"C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\reportWebVitals.js",[],["85","86"],"C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\components\\Routing\\Routing.js",[],"C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\components\\NavBar\\NavBar.js",["87","88","89","90"],"C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\components\\NavBar\\Navbar.js",[],"C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\components\\NavBar\\MenuItems.js",[],"C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\components\\Button.js",[],["91","92"],"C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\components\\Dashboard\\Dashboard.js",[],"C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\components\\DemandOverdue\\DemandOverdueTable.js",["93","94","95","96"],"import React, { useMemo, useEffect, useState } from \"react\";\r\nimport \"./DemandOverdueTable.css\";\r\nimport {\r\n  useTable,\r\n  useSortBy,\r\n  useGlobalFilter,\r\n  usePagination,\r\n  useRowSelect,\r\n  useBlockLayout,\r\n} from \"react-table\";\r\nimport { useSticky } from \"react-table-sticky\";\r\nimport { COLUMNS } from \"./columns\";\r\n// import MOCK_DATA from \"../MOCK_DATA.json\";\r\nimport {\r\n  CaretDownFill,\r\n  CaretUpFill,\r\n  ChevronBarExpand,\r\n  CalendarWeek,\r\n} from \"react-bootstrap-icons\";\r\nimport { GlobalFilter } from \"./GlobalFilter\";\r\nimport { Checkbox } from \"./Checkbox\";\r\n\r\nconst API = \"http://localhost:5000\";\r\n\r\nconst DemandOverdueTable = (props) => {\r\n  const info = props.details.data;\r\n  const data = useMemo(() => info, []);\r\n\r\n  const columns = useMemo(() => COLUMNS, []);\r\n  // const data = useMemo(() => MOCK_DATA, []);\r\n\r\n  // const getRequests = async () => {\r\n  //   try {\r\n  //     const res = await fetch(`${API}/dashboard`);\r\n  //     if (!res.ok) {\r\n  //       throw Error(res.statusText);\r\n  //     }\r\n  //     const data = await res.json();\r\n  //     return data;\r\n  //   } catch (e) {\r\n  //     console.log(e);\r\n  //   }\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   getRequests().then((data) => setRequestInformation(data));\r\n  //   console.log(data);\r\n  //   console.log(requestinformation);\r\n  // }, []);\r\n\r\n  // const data = useMemo(() => requestinformation, []);\r\n  // console.log(data);\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    // We don't need it due to pagination\r\n    // footerGroups,\r\n    // rows,\r\n    page,\r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    setPageSize,\r\n    // selectedFlatRows,\r\n    prepareRow,\r\n    state,\r\n    setGlobalFilter,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n    },\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination,\r\n    useRowSelect,\r\n    (hooks) => {\r\n      hooks.visibleColumns.push((columns) => {\r\n        return [\r\n          {\r\n            id: \"selection\",\r\n            Header: ({ getToggleAllRowsSelectedProps }) => (\r\n              <Checkbox {...getToggleAllRowsSelectedProps()} />\r\n            ),\r\n            Cell: ({ row }) => (\r\n              <Checkbox {...row.getToggleRowSelectedProps()} />\r\n            ),\r\n          },\r\n          ...columns,\r\n        ];\r\n      });\r\n    },\r\n    useBlockLayout,\r\n    useSticky\r\n  );\r\n\r\n  const { globalFilter } = state;\r\n  const { pageIndex, pageSize } = state;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"upper\">\r\n        <div>\r\n          <CalendarWeek />\r\n        </div>\r\n        <p className=\"title\">demand overdue</p>\r\n      </div>\r\n      <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\r\n      <div className=\"beforeTable\">\r\n        <table {...getTableProps()}>\r\n          <thead>\r\n            {headerGroups.map((headerGroup) => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map((column) => (\r\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                    {column.render(\"Header\")}\r\n                    <span className=\"order\">\r\n                      {column.isSorted ? (\r\n                        column.isSortedDesc ? (\r\n                          <CaretDownFill />\r\n                        ) : (\r\n                          <CaretUpFill />\r\n                        )\r\n                      ) : (\r\n                        <ChevronBarExpand />\r\n                      )}\r\n                    </span>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {page.map((row, i) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()} data-key={row.id}>\r\n                  {row.cells.map((cell) => {\r\n                    return (\r\n                      <td data-key={cell.id} {...cell.getCellProps()}>\r\n                        {cell.render(\"Cell\")}\r\n                      </td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n          {/* // We don't need it due to pagination\r\n                // <tfoot>\r\n                    //     {footerGroups.map(footerGroup => (\r\n                //         <tr{...footerGroup.getFooterGroupProps()}>\r\n                        //             {footerGroup.headers.map(column => (\r\n                //                 <td {...column.getFooterProps}>\r\n                            //                     {column.render('Footer')}\r\n                //                 </td>\r\n                //             ))}\r\n                //         </tr>\r\n                //     ))}\r\n                // </tfoot> */}\r\n        </table>\r\n      </div>\r\n      <div className=\"pagination\">\r\n        <select\r\n          value={pageSize}\r\n          onChange={(e) => setPageSize(Number(e.target.value))}\r\n        >\r\n          {[10, 25, 50].map((pageSize) => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Show {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <span className=\"pages\">\r\n          Page{\" \"}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>\r\n        </span>\r\n        <button\r\n          className=\"btn-previous\"\r\n          onClick={() => previousPage()}\r\n          disabled={!canPreviousPage}\r\n        >\r\n          {\"<\"}\r\n        </button>\r\n        <button\r\n          className=\"btn-next\"\r\n          onClick={() => nextPage()}\r\n          disabled={!canNextPage}\r\n        >\r\n          {\">\"}\r\n        </button>\r\n      </div>\r\n      {/* <pre>\r\n                <code>\r\n                    {JSON.stringify(\r\n                        {\r\n                            selectedFlatRows: selectedFlatRows.map((row) => row.original),\r\n                        },\r\n                        null,\r\n                        2\r\n                    )}\r\n                </code>\r\n            </pre> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DemandOverdueTable;\r\n","C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\components\\DemandOverdue\\columns.js",[],"C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\components\\DemandOverdue\\GlobalFilter.js",[],"C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\components\\DemandOverdue\\Checkbox.js",[],"C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\components\\Locations\\Locations.js",[],"C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\components\\PieChart\\Piechart.js",[],"C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\components\\Cadre\\Cadre.js",[],"C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\services\\requests.js",[],["97","98"],"C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\components\\Loader\\Loader.js",[],"C:\\Users\\Lntinfotech\\Desktop\\ifullfill\\frontend\\src\\components\\Home\\Home.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"99","replacedBy":"103"},{"ruleId":"101","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":1,"column":8,"nodeType":"107","messageId":"108","endLine":1,"endColumn":12},{"ruleId":"105","severity":1,"message":"109","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":14},{"ruleId":"105","severity":1,"message":"110","line":4,"column":8,"nodeType":"107","messageId":"108","endLine":4,"endColumn":11},{"ruleId":"105","severity":1,"message":"111","line":6,"column":9,"nodeType":"107","messageId":"108","endLine":6,"endColumn":18},{"ruleId":"99","replacedBy":"112"},{"ruleId":"101","replacedBy":"113"},{"ruleId":"105","severity":1,"message":"114","line":1,"column":26,"nodeType":"107","messageId":"108","endLine":1,"endColumn":35},{"ruleId":"105","severity":1,"message":"115","line":1,"column":37,"nodeType":"107","messageId":"108","endLine":1,"endColumn":45},{"ruleId":"105","severity":1,"message":"116","line":23,"column":7,"nodeType":"107","messageId":"108","endLine":23,"endColumn":10},{"ruleId":"117","severity":1,"message":"118","line":27,"column":36,"nodeType":"119","endLine":27,"endColumn":38,"suggestions":"120"},{"ruleId":"99","replacedBy":"121"},{"ruleId":"101","replacedBy":"122"},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],["123"],["124"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'Nav' is defined but never used.","'useEffect' is assigned a value but never used.",["123"],["124"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'API' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'info'. Either include it or remove the dependency array.","ArrayExpression",["125"],["123"],["124"],"no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},"Update the dependencies array to be: [info]",{"range":"128","text":"129"},[723,725],"[info]"]